metallica<-c("Lars","James","Jason","Kirk")
metalica
print(metallica)
metallica<-metallica[metallica!= "Jason"]
metallica
metallica<-c(metallica, "Rob")
metallica
friends<-c(friends, "Mille", "Nina", "Kiri", "Jacob")
friends<-c("Mille","Nina","Kiri","Jacob")
friends
friends<-c("Mille","Nina","Kiri","Jacob")
friends<-friends[]
friends<-friends[!= "Jacob"]
friends<-friends[friends!= "Jacob"]
friends
friends<-c(friends, "Jacob")
friends
metallica
metallica
friends
friends<-friends[friends != "Jacob]
"]
friends
friends<-friends[friends != "Jacob"]
friends
friends<-friends[friends!= "Jacob"]
friends
friends<-c(friends, "Jacob")
friends
metallicaNames<-c("Lars","James","Kirk","Rob")
metallicaNames
metallicaAges<-c(47, 47, 48, 46)
metallicaAges
metallica<-data.frame(Name = metallicaNames, Age = metallicaAges)
metallica
metallica$Name
metallica$Age
metallica$childAge<-c(12, 12, 4, 6)
metallica$childAge
metallica
names(metallica)
metallica$fatherhoodAge<- metallica$Age & minus metallica$childAge
metallica$fatherhoodAge<- metallica$Age & - metallica$childAge
fatherhoodAge
metallica
metallica$fatherhoodAge<- metallica$Age - metallica$childAge
metallica
metallicaNames<-c("Lars","James","Kirk","Rob")
metallicaNames
metallicaAges<-c(47, 47, 48, 46)
metallicaAges
metallica<-data.frame(Name = metallicaNames, Age = metallicaAges)
metallica$Age
metallica$childAge<-c(12, 12, 4, 6)
metallica$childAge
metallica
names(metallica)
metallica$fatherhoodAge<- metallica$Age - metallica$childAge
name<-c("Ben", "Martin", "Andy", "Paul", "Graham", "Carina", "Karina", "Doug", "Mark", "Zoe")
husband<-as.Date(c("1973-06-21", "1970-07-16", "1949-10-08", "1969-05-24"))
wife<-as.Date(c("1984-11-12", "1973-08-02", "1948-11-11", "1983-07-23"))
agegap<-husband-wife
agegap
birth_date<-as.Date(c("1977-07-03", "1969-05-24", "1973-06-21","1970-07-16", "1949-10-10", "1983-11-05", "1987-10-08", "1989-09-16","1973-05-20", "1984-11-12"))
job<-c(1,1,1,1,1,2,2,2,2,2)
job
job<-factor(job, levels = c(1:2), labels = c("Lecturer", "Student"))
job<-gl(2, 5, labels = c("Lecturer", "Student"))
levels(job)
levels(job)<-c("Medical Lecturer", "Medical Student")
friends<-c(5,2,0,4,1,10,12,15,12,17)
alcohol<-c(10,15,20,5,30,25,20,16,17,18)
income<-c(20000,40000,35000,22000,50000,5000,100,3000,10000,10)
neurotic<-c(10,17,14,13,21,7,13,9,14,13)
lecturerData<-data.frame(name,birth_date,job,friends,alcohol,income,neurotic)
lecturerData
lecturerPersonality <- lecturerData[, c("friends", "alcohol","neurotic")]
lecturerPersonality
lecturerOnly <- lecturerData[job=="Medical Lecturer",]
lecturerOnly
alcoholPersonality <- lecturerData[alcohol > 10, c("friends","alcohol", "neurotic")]
alcoholPersonality
alcoholPersonalityMatrix <- as.matrix(alcoholPersonality)
alcoholPersonalityMatrix
alcoholPersonalityMatrix <- as.matrix(lecturerData[alcohol > 10,c("friends", "alcohol", "neurotic")])
alcoholPersonalityMatrix
satisfactionData = read.delim("Honeymoon Period.dat", header = TRUE)
satisfactionData = read.delim("Honeymoon Period.dat", header = TRUE)
satisfactionData = read.delim("Honeymoon Period.dat.txt", header = TRUE)
setwd("~/Users/FlowersnIce-cream/Google Drev/Hogwarts/R Studio")
#Load data
search<- read.csv("~/Users/FlowersnIce-cream/Downloads/0/03_visual_search_stuff/visual_search_data/Sebber (2017-09-20 14-30-47).csv", sep=";")
#Load data
search<- read.csv("~Users/FlowersnIce-cream/Downloads/0/03_visual_search_stuff/visual_search_data/Sebber (2017-09-20 14-30-47).csv", sep=";")
#Load data
search<- read.csv("Users/FlowersnIce-cream/Downloads/0/03_visual_search_stuff/visual_search_data/Sebber (2017-09-20 14-30-47).csv", sep=";")
#Load data
search<- read.csv("/Users/FlowersnIce-cream/Downloads/0/03_visual_search_stuff/visual_search_data/Sebber (2017-09-20 14-30-47).csv", sep=";")
'% accuracy:'
mean(search$correct_resp,na.rm = TRUE)*100
#Load data
search<- read.csv("/Users/FlowersnIce-cream/Downloads/0/03_visual_search_stuff/visual_search_data/Sebber (2017-09-20 14-30-47).csv", sep=";")
'% accuracy:'
mean(search$correct_resp,na.rm = TRUE)*100
#Remove NAs
search<-subset(search,search$rt!="NA")
search<-subset(search,search$correct_resp!=0)
#turn variables into factors
search$conjunct<-as.factor(search$conjunct)
search$present<-as.factor(search$present)
#Remove outliers
#search<-subset(search,search$rt<mean(search$rt)+3*sd(search$rt))
#histogram
hist(search$rt,breaks=10)
#Q-Q-plot
qqnorm(search$rt)
#make a log-transformation
search$logrt=log(search$rt)
#histogram
hist(search$logrt,breaks=10)
#Q-Q-plot
qqnorm(search$logrt)
search_model<-lm(logrt~setsize*conjunct*present, data=search)
summary(search_model)
library(ggplot2)
search$setsize_f<-as.factor(search$setsize)
ggplot(search, aes(x = setsize , y = rt, color=conjunct, fill=present)) +
geom_point() + labs(x = "setsize", y = "Response time)") +
geom_smooth(method='lm')
View(search)
sarah<- c(1.95,1.58,1.70,2.46,2.27,2.62,3.32,3.51,3.89,3.41)
mother<-c(3.21,4.04,3.30,3.85,4.13,4.59,4.11,4.29,5.82,5.14)
mean_sarah<-mean(sarah)
mean_mother<-mean(mother)
error_sarah<-sarah-mean_sarah
error_mother<-mother-mean_mother
error_sarah*error_mother
sum_of_scores<- sum(error_sarah*error_mother)
sum_of_scores
cov<-sum_of_scores/9
cov
SD_Sarah<-sqrt(mean_sarah)
cov
Correlation_coefficient<-cov/(0.82*0.79)
Correlation_coefficient
Correlation_coefficient*Correlation_coefficient
roh_squared<-Correlation_coefficient*Correlation_coefficient
Correlation_coefficient_aka_roh<-cov/(0.82*0.79)
install.packages("ggplot2"); install.packages("pastecs"); install.packages ("WRS")
library(ggplot2); library(pastecs); library(WRS)
install.packages ("WRS")
library(ggplot2); library(pastecs)
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/R Studio/work/CLasswork/6")
load("/Users/FlowersnIce-cream/Google Drev/Hogwarts/R Studio/Portfolio/Reading data")
load("/Users/FlowersnIce-cream/Google Drev/Hogwarts/R Studio/Portfolio/Reading data/logfile_Astrid Juul Winther2.csv")
load("/Users/FlowersnIce-cream/Google Drev/Hogwarts/R Studio/Portfolio/Reading data/logfile_Anton Pedreo Adrian2.csv")
setwd("/Users/FlowersnIce-cream/Google Drev/Hogwarts/R Studio/Portfolio/Reading data")
filenames = list.files(pattern = "*.csv") #list of filenames
filesnames
filenames = list.files(pattern = "*.csv") #list of filenames
data = data.frame() #create empty df
data = rbind(data, file[162,]) #add the 162th line of the
filenames = list.files(pattern = "*.csv") #list of filenames
data = data.frame() #create empty df
for (i in filenames){	#loop over list of files
file = read.csv(i)	#import the current file
data = rbind(data, file[162,]) #add the 162th line of the
data = rbind(data, file[162,]) #add the 162th line of the
View(data)
for (i in filenames){	#loop over list of files
file = read.csv(i)	#import the current file
data = rbind(data, file[162,]) #add the 162th line of the
}
file = read.csv(i)	#import the current file
file = read.csv(i)	#import the current file
filenames = list.files(pattern = "*.csv") #list of filenames
data = data.frame() #create empty df
for (i in filenames){	#loop over list of files
file = read.csv(i)	#import the current file
data = rbind(data, file[162,]) #add the 162th line of the
}
View(data)
data = rbind(data, file[163,]) #add the 162th line of the
View(data)
data = rbind(data, file[164,]) #add the 162th line of the
View(data)
View(data)
qqnorm(data$Reaction.Time)
qqnorm(log(data$Reaction.Time))
qqnorm(sqrt(data$Reaction.Time))
qqnorm(1/(data$Reaction.Time))
qqnorm(log(data$Reaction.Time)) #alrigthy
qqnorm(sqrt(data$Reaction.Time)) # Not good
qqnorm(log(data$Reaction.Time)) #alrigthy
qqnorm(1/(data$Reaction.Time))
qqnorm(data$Reaction.Time)
qqnorm(log(data$Reaction.Time)) #alrigthy
qqnorm(1/(data$Reaction.Time))
data1 = Filter(data, Condition == "1")
data1 <- Filter(data, Condition == "1")
load(tidyverse)
load(ggplot2)
library(ggplot2) ; library(tidyverse)
data1 <- Filter(data, Condition == "1")
data1 <- Filter(data, Condition == 1)
qqnorm(log(data$Reaction.Time)) #alrigthy
qqnorm(sqrt(data$Reaction.Time)) # Not good
qqnorm(1/(data$Reaction.Time)) # alrigthy
qqnorm(data$Reaction.Time)
qqnorm(log(data$Reaction.Time)) #alrigthy
qqnorm(sqrt(data$Reaction.Time)) # Not good
qqnorm(1/(data$Reaction.Time)) # alrigthy
data1 <- filter(data, Condition == 1)
data2 <- filter(data, Condition == 2)
qqnorm(data1$Reaction.Time)
qqnorm(log(data1$Reaction.Time)) #alrigthy
qqnorm(sqrt(data1$Reaction.Time)) # Not good
qqnorm(1/(data1$Reaction.Time)) # alrigthy
qqnorm(sqrt(data1$Reaction.Time)) # Not good
qqnorm(log(data1$Reaction.Time)) #alrigthy
qqnorm(1/(data1$Reaction.Time)) # alrigthy
qqnorm(data2$Reaction.Time)
qqnorm(log(data2$Reaction.Time)) #alrigthy
qqnorm(sqrt(data2$Reaction.Time)) # Not good
qqnorm(1/(data2$Reaction.Time)) # alrigthy
qqnorm(log(data2$Reaction.Time)) #alrigthy
View(data1)
View(data2)
library(ggplot2) ; library(tidyverse) ; library(pastecs)
data2$log <- qqnorm(log(data2$Reaction.Time)) #not good
View(data2)
data2$log <- log(data2$Reaction.Time)
data2$sqrt <- qqnorm(sqrt(data2$Reaction.Time)) # Not good
data2$sqrt <- sqrt(data2$Reaction.Time)
data2$RT <- 1/(data2$Reaction.Time)
View(data2)
qqnorm(data1$Reaction.Time)
data1$log <- log(data1$Reaction.Time)
qqnorm(log(data1$Reaction.Time)) #meh
data1$sqrt <- sqrt(data1$Reaction.Time)
qqnorm(sqrt(data1$Reaction.Time)) # Not good
data1$RT <- 1/(data1$Reaction.Time)
round(stat.desc(data$Reaction.Time, norm = TRUE),3)
round(stat.desc(data$Reaction.Time, norm = TRUE),4)
t.test(data1$RT~data2$RT)
View(data)
t.test(data$RT~data$word)
t.test(data$RT~data$Word)
t.test(data$Reaction.Time~data$Word, data=data, paired = F)
t.test(data$Reaction.Time ~ data$Condition, data=data, paired = F)
qqnorm(data1$Reaction.Time)
data$log <- log(data$Reaction.Time)
qqnorm(log(data1$Reaction.Time)) #alrigthy
data$sqrt <- sqrt(data$Reaction.Time)
qqnorm(sqrt(data$Reaction.Time)) # Not good
data$RT <- 1/(data$Reaction.Time)
t.test(data$RT ~ data$Condition, data=data, paired = F)
t.test(data$sqrt ~ data$Condition, data=data, paired = F)
